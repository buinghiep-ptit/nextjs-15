import type { Metadata } from "next";
import { Geist, Inter, Geist_Mono, Phudu } from "next/font/google";
import "./globals.css";
import Providers from "@/providers";
import { cookies } from "next/headers";
import { Toaster } from "react-hot-toast";
import Image from "next/image";
import { XCircleIcon } from "lucide-react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin", "vietnamese"],
});

const phuDu = Phudu({
  variable: "--font-phu-du",
  subsets: ["vietnamese"],
  weight: ["400", "500", "600", "700"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = await cookies();
  const sessionToken = cookieStore.get("fv_access_token")?.value;

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${inter.variable} ${phuDu.variable} antialiased`}
        suppressHydrationWarning
      >
        <Providers initialSessionToken={sessionToken}>
          {children}
          <Toaster
            position="top-right"
            toastOptions={{
              className:
                "!bg-primary !text-white !rounded-full !shadow-none !px-4 !py-3",
              success: {
                icon: (
                  <Image
                    src="/icons/tick-circle.svg"
                    alt="Check"
                    width={24}
                    height={24}
                  />
                ),
              },
              error: {
                icon: <XCircleIcon className="w-6 h-6 text-red-500" />,
                // className: "bg-red-100 border-l-4 border-red-500 text-red-700",
              },
            }}
          />
        </Providers>
      </body>
    </html>
  );
}
